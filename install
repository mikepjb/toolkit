#!/bin/bash

cd $(dirname $BASH_SOURCE)
BASE=$(pwd)

for rc in *rc gitconfig Xresources Xmodmap tmux.conf ctags; do
  ln -sfv $BASE/$rc ~/.$rc
done

mkdir -p $HOME/.vim/colors
ln -sfv $BASE/bare.vim ~/.vim/colors/bare.vim
ln -sfv $BASE/lumo.vim ~/.vim/colors/lumo.vim
ln -sfv $BASE/en.utf-8.add ~/.vim/en.utf-8.add

mkdir -p $HOME/.config/nvim/colors
ln -sfv $BASE/init.vim ~/.config/nvim/init.vim
ln -sfv $BASE/lumo.vim ~/.config/nvim/colors/lumo.vim
mkdir -p $HOME/.config/nvim/autoload
mkdir -p $HOME/.config/nvim/plugged

sudo cp $(which vim) /usr/local/bin/vi

mkdir -p $HOME/.vim/autoload
ln -sfv $BASE/autoload.vim ~/.vim/autoload/autoload.vim

mkdir -p $HOME/.config/clojure
ln -sfv $BASE/deps.edn $HOME/.config/clojure/deps.edn

[ -L ~/.mutt ] && unlink ~/.mutt
ln -sfv $BASE/mutt ~/.mutt

mkdir -p ~/.mutt/mailbox/personal

ln -sfv $BASE/compton.conf ~/.config/compton.conf
ln -sfv $BASE/i3config ~/.config/i3/config

symlink_emacs_configuration() {
    mkdir -p ~/.emacs.d
    ln -sfv $BASE/init.el ~/.emacs.d/init.el
    [ -L ~/.emacs.d/lib ] && unlink ~/.emacs.d/lib
    ln -sfv $BASE/lib ~/.emacs.d/lib
}

symlink_emacs_configuration


configure_npm_directory() {
  mkdir -p ~/.npm-global
  npm config set prefix '~/.npm-global'
  # curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash
}

setup_go_tools() {
  echo ' ===> Installing/Updating Go Tools (stored in pkg and build to bin)'
  go get -u golang.org/x/tools/cmd/godoc
  go get -u golang.org/x/tools/cmd/guru
  go get -u github.com/nsf/gocode # autocomplete tool
  go get -u github.com/cortesi/devd # hot reloading web server
  go get -u github.com/rogpeppe/godef # find source definitions
  go get -u golang.org/x/tools/cmd/goimports # gofmt w/ autoinclude imports
  go get -u golang.org/x/mobile/cmd/gomobile
  go get -u github.com/gohugoio/hugo
  go get -u github.com/dougm/goflymake # compiler checking in emacs
  go get -u github.com/kisielk/errcheck
  go get -u github.com/golangci/golangci-lint/cmd/golangci-lint
}

# setup_go_tools

install_hugo() {
  if [ -d $HOME/src/hugo ]; then return; fi
  cd $HOME/src
  git clone https://github.com/gohugoio/hugo.git
  cd hugo
  go install
}

# install_hugo
